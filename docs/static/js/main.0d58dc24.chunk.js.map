{"version":3,"sources":["pages/reactAppContainerDemo.js","pages/reactAppContainerConstants.js","App.js","index.js","pages/reactAppContainerDemo.module.css"],"names":["HomeRoute","style","height","width","display","justifyContent","alignItems","AppsRoute","SettingsRoute","SendMailRoute","NoRouterVersion","DesignConfig","sideBarMenu","iconName","label","routeKey","subMenuItemList","iconComp","onClick","alert","headerMenu","headerLeftContent","color","borderStyle","borderColor","borderWidth","padding","sideBarHeaderContent","fontFamily","Routes","component","key","path","ReactAppContainerDemo","props","aceEditorRef","useRef","useState","dynamicStyleHeader","setDynamicStyleHeader","isEnabledRoutes","setIsEnabledRoutes","useEffect","setInterval","randomColorText","Math","floor","random","toString","randomColorBackground","backgroundColor","current","editor","session","foldAll","className","styles","container","headerContainer","headerText","jsonContainer","marginBottom","subHeaderText","jsonEditorContainer","ref","placeholder","mode","readOnly","value","theme","editorProps","$blockScrolling","optionsContainer","overflowY","marginRight","htmlFor","id","type","onChange","event","target","checked","source","mainContainer","designConfig","routes","App","from","to","ReactDOM","render","StrictMode","document","getElementById","module","exports"],"mappings":"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","file":"static/js/main.0d58dc24.chunk.js","sourcesContent":["import React, { useState, useRef, useEffect } from \"react\";\r\nimport styles from \"./reactAppContainerDemo.module.css\";\r\nimport AppContainer from \"react-app-container\";\r\nimport AceEditor from \"react-ace\";\r\nimport \"ace-builds/src-noconflict/mode-javascript\";\r\nimport \"ace-builds/src-noconflict/theme-monokai\";\r\nimport {MarkDownForDemo} from './reactAppContainerConstants'\r\nimport ReactMarkdown from 'react-markdown'\r\n// use the component in your app!\r\n\r\nconst jsonEditorCodeDisabledRoute = `import React from 'react';\r\nimport ReactAppContainer from 'react-app-container';\r\n\r\n\r\nconst NoRouterVersionContent = () => {\r\n  return (\r\n    <div\r\n      style={{\r\n        height: \"100%\",\r\n        width: \"100%\",\r\n        display: \"flex\",\r\n        justifyContent: \"center\",\r\n        alignItems: \"center\",\r\n      }}\r\n    >\r\n      <p>\r\n        <h1>This is No Router Version,</h1>\r\n        You can use only design, without adding routes to the component props.{\" \"}\r\n        <br></br>\r\n        <h5>You will see above the component code and design config. </h5>\r\n        <h3>\r\n          You can see the router version by changing disable/enable option above\r\n        </h3>\r\n      </p>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst DesignConfig = {\r\n  sideBarMenu: [\r\n    {\r\n      iconName: \"home\",\r\n      label: \"Home\",\r\n    },\r\n    {\r\n      iconName: \"dashboard\",\r\n      label: \"Dashboard\",\r\n    },\r\n    {\r\n      iconName: \"apps\",\r\n      label: \"Applications\",\r\n    },\r\n    {\r\n      iconName: \"mail\",\r\n      label: \"Mail\",\r\n      subMenuItemList: [\r\n        {\r\n          label: \"Send Mail\",\r\n          iconName: \"post_add\",\r\n        },\r\n        {\r\n          label: \"List Mail\",\r\n          iconName: \"post_add\",\r\n        },\r\n      ],\r\n    },\r\n    {\r\n      iconComp: <h1>U</h1>,\r\n      label: \"Users\",\r\n      onClick: () => {\r\n        alert(\"Users Clicked\");\r\n      },\r\n    },\r\n    {\r\n      iconName: \"settings\",\r\n      label: \"Settings\",\r\n    },\r\n  ],\r\n  headerMenu: [\r\n    {\r\n      iconName: \"room\",\r\n    },\r\n    {\r\n      iconName: \"language\",\r\n      label: \"Language\",\r\n      subMenuItemList: [\r\n        {\r\n          iconComp: <h4>TR</h4>,\r\n          label: \"Turkish\",\r\n          onClick: () => {\r\n            alert(\"Turkish Clicked\");\r\n        },\r\n        },\r\n        {\r\n          iconComp: <h4>FR</h4>,\r\n          label: \"French\",\r\n          onClick: () => {\r\n            alert(\"English Clicked\");\r\n        },\r\n        },\r\n      ],\r\n    },\r\n  ],\r\n  headerLeftContent: (\r\n    <h5\r\n      style={{\r\n        color: \"white\",\r\n        borderStyle: \"solid\",\r\n        borderColor: \"white\",\r\n        borderWidth: \"1px\",\r\n        padding:'5px'\r\n      }}\r\n    >\r\n      {\" \"}\r\n      Here is Header Left Content Key. You can add what you want as\r\n      Component\r\n    </h5>\r\n  ),\r\n  sideBarHeaderContent : (\r\n    <h3 style={{fontFamily :'monospace'}}>\r\n      Container & Your Logo\r\n    </h3>\r\n  )\r\n}\r\n\r\nconst App = (props) => {\r\n\r\n  return (\r\n    <ReactAppContainer \r\n      designConfig = {DesignConfig}>\r\n      <NoRouterVersionContent />\r\n    </ReactAppContainer>\r\n  )\r\n\r\n}\r\n\r\nexport default App;\r\n`;\r\n\r\nconst jsonEditorCodeEnabledRoute = `import React from 'react';\r\nimport ReactAppContainer from 'react-app-container';\r\n\r\n\r\nconst HomeRoute = () => {\r\n  return (\r\n    <div\r\n      style={{\r\n        height: \"100%\",\r\n        width: \"100%\",\r\n        display: \"flex\",\r\n        justifyContent: \"center\",\r\n        alignItems: \"center\",\r\n      }}\r\n    >\r\n      <h1> Home Route </h1>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst AppsRoute = () => {\r\n  return (\r\n    <div\r\n      style={{\r\n        height: \"100%\",\r\n        width: \"100%\",\r\n        display: \"flex\",\r\n        justifyContent: \"center\",\r\n        alignItems: \"center\",\r\n      }}\r\n    >\r\n      <h1> Application Route </h1>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst SettingsRoute = () => {\r\n  return (\r\n    <div\r\n      style={{\r\n        height: \"100%\",\r\n        width: \"100%\",\r\n        display: \"flex\",\r\n        justifyContent: \"center\",\r\n        alignItems: \"center\",\r\n      }}\r\n    >\r\n      <h1> Settings Route </h1>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst DesignConfig = {\r\n  sideBarMenu: [\r\n    {\r\n      iconName: \"home\",\r\n      label: \"Home\",\r\n      routeKey :\"Home\"\r\n    },\r\n    {\r\n      iconName: \"dashboard\",\r\n      label: \"Dashboard\",\r\n    },\r\n    {\r\n      iconName: \"apps\",\r\n      label: \"Applications\",\r\n      routeKey :\"Apps\"\r\n    },\r\n    {\r\n      iconName: \"mail\",\r\n      label: \"Mail\",\r\n      subMenuItemList: [\r\n        {\r\n          label: \"Send Mail\",\r\n          iconName: \"post_add\",\r\n        },\r\n        {\r\n          label: \"List Mail\",\r\n          iconName: \"post_add\",\r\n        },\r\n      ],\r\n    },\r\n    {\r\n      iconComp: <h1>U</h1>,\r\n      label: \"Users\",\r\n      onClick: () => {\r\n        alert(\"Users Clicked\");\r\n      },\r\n    },\r\n    {\r\n      iconName: \"settings\",\r\n      label: \"Settings\",\r\n      routeKey :'Settings'\r\n    },\r\n  ],\r\n  headerMenu: [\r\n    {\r\n      iconName: \"room\",\r\n    },\r\n    {\r\n      iconName: \"language\",\r\n      label: \"Language\",\r\n      subMenuItemList: [\r\n        {\r\n          iconComp: <h4>TR</h4>,\r\n          label: \"Turkish\",\r\n          onClick: () => {\r\n            alert(\"Turkish Clicked\");\r\n          },\r\n        },\r\n        {\r\n          iconComp: <h4>FR</h4>,\r\n          label: \"French\",\r\n          onClick: () => {\r\n            alert(\"English Clicked\");\r\n          },\r\n        },\r\n      ],\r\n    },\r\n  ],\r\n  headerLeftContent: (\r\n    <h5\r\n      style={{\r\n        color: \"white\",\r\n        borderStyle: \"solid\",\r\n        borderColor: \"white\",\r\n        borderWidth: \"1px\",\r\n        padding: \"5px\",\r\n      }}\r\n    >\r\n      {\" \"}\r\n      Here is Header Left Content Key. You can add what you want as\r\n      Component\r\n    </h5>\r\n  ),\r\n  sideBarHeaderContent: (\r\n    <h3 style={{ fontFamily: \"monospace\" }}>Container & Your Logo</h3>\r\n  ),\r\n} \r\n\r\nconst Routes = [{\r\n  component :(<HomeRoute />),\r\n  key : 'Home',\r\n  label : 'Home Page',\r\n  path :'/react-app-container/'                        \r\n},\r\n{\r\n  component : (<AppsRoute />),\r\n  key :'Apps',\r\n  label : 'Application',\r\n  path :'/react-app-container/Apps'\r\n},\r\n{\r\n  component :(<SettingsRoute />),\r\n  key :'Settings',\r\n  label :'Settings',\r\n  path : '/react-app-container/Settings'\r\n}]\r\n\r\n\r\n\r\nconst App = (props) => {\r\n\r\n  return (\r\n    <ReactAppContainer \r\n      designConfig = {DesignConfig}\r\n      routes={Routes}>\r\n      <NoRouterVersionContent />\r\n    </ReactAppContainer>\r\n  )\r\n\r\n}\r\n\r\nexport default App;\r\n`;\r\n\r\n\r\n\r\nconst HomeRoute = () => {\r\n  return (\r\n    <div\r\n      style={{\r\n        height: \"100%\",\r\n        width: \"100%\",\r\n        display: \"flex\",\r\n        justifyContent: \"center\",\r\n        alignItems: \"center\",\r\n      }}\r\n    >\r\n      <h1> Home Route </h1>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst AppsRoute = () => {\r\n  return (\r\n    <div\r\n      style={{\r\n        height: \"100%\",\r\n        width: \"100%\",\r\n        display: \"flex\",\r\n        justifyContent: \"center\",\r\n        alignItems: \"center\",\r\n      }}\r\n    >\r\n      <h1> Application Route </h1>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst SettingsRoute = () => {\r\n  return (\r\n    <div\r\n      style={{\r\n        height: \"100%\",\r\n        width: \"100%\",\r\n        display: \"flex\",\r\n        justifyContent: \"center\",\r\n        alignItems: \"center\",\r\n      }}\r\n    >\r\n      <h1> Settings Route </h1>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst SendMailRoute = () => {\r\n  return (\r\n    <div\r\n      style={{\r\n        height: \"100%\",\r\n        width: \"100%\",\r\n        display: \"flex\",\r\n        justifyContent: \"center\",\r\n        alignItems: \"center\",\r\n      }}\r\n    >\r\n      <h1> Send Mail Route </h1>\r\n    </div>\r\n  )\r\n}\r\n\r\nconst NoRouterVersion = () => {\r\n  return (\r\n    <div\r\n      style={{\r\n        height: \"100%\",\r\n        width: \"100%\",\r\n        display: \"flex\",\r\n        justifyContent: \"center\",\r\n        alignItems: \"center\",\r\n      }}\r\n    >\r\n      <p>\r\n        <h1>This is No Router Version,</h1>\r\n        You can use only design, without adding routes to the component props.{\" \"}\r\n        <br></br>\r\n        <h5>You will see above the component code and design config. </h5>\r\n        <h3>\r\n          You can see the router version by changing disable/enable option above\r\n        </h3>\r\n      </p>\r\n    </div>\r\n  );\r\n};\r\n\r\n\r\nconst DesignConfig = {\r\n  sideBarMenu: [\r\n    {\r\n      iconName: \"home\",\r\n      label: \"Home\",\r\n      routeKey :\"Home\"\r\n    },\r\n    {\r\n      iconName: \"dashboard\",\r\n      label: \"Dashboard\",\r\n    },\r\n    {\r\n      iconName: \"apps\",\r\n      label: \"Applications\",\r\n      routeKey :\"Apps\"\r\n    },\r\n    {\r\n      iconName: \"mail\",\r\n      label: \"Mail\",\r\n      subMenuItemList: [\r\n        {\r\n          label: \"Send Mail\",\r\n          iconName: \"post_add\",\r\n          routeKey :'SendMail'\r\n        },\r\n        {\r\n          label: \"List Mail\",\r\n          iconName: \"post_add\",\r\n        },\r\n      ],\r\n    },\r\n    {\r\n      iconComp: <h1>U</h1>,\r\n      label: \"Users\",\r\n      onClick: () => {\r\n        alert(\"Users Clicked\");\r\n      },\r\n    },\r\n    {\r\n      iconName: \"settings\",\r\n      label: \"Settings\",\r\n      routeKey :'Settings'\r\n    },\r\n  ],\r\n  headerMenu: [\r\n    {\r\n      iconName: \"room\",\r\n    },\r\n    {\r\n      iconName: \"language\",\r\n      label: \"Language\",\r\n      subMenuItemList: [\r\n        {\r\n          iconComp: <h4>TR</h4>,\r\n          label: \"Turkish\",\r\n          onClick: () => {\r\n            alert(\"Turkish Clicked\");\r\n          },\r\n        },\r\n        {\r\n          iconComp: <h4>FR</h4>,\r\n          label: \"French\",\r\n          onClick: () => {\r\n            alert(\"English Clicked\");\r\n          },\r\n        },\r\n      ],\r\n    },\r\n  ],\r\n  headerLeftContent: (\r\n    <h5\r\n      style={{\r\n        color: \"white\",\r\n        borderStyle: \"solid\",\r\n        borderColor: \"white\",\r\n        borderWidth: \"1px\",\r\n        padding: \"5px\",\r\n      }}\r\n    >\r\n      {\" \"}\r\n      Here is Header Left Content Key. You can add what you want as\r\n      Component\r\n    </h5>\r\n  ),\r\n  sideBarHeaderContent: (\r\n    <h3 style={{ fontFamily: \"monospace\" }}>Container & Your Logo</h3>\r\n  ),\r\n} \r\n\r\nconst Routes = [{\r\n  component :(<HomeRoute />),\r\n  key : 'Home',\r\n  label : 'Home Page',\r\n  path :'/react-app-container/'                        \r\n},\r\n{\r\n  component : (<AppsRoute />),\r\n  key :'Apps',\r\n  label : 'Application',\r\n  path :'/react-app-container/Apps'\r\n},\r\n{\r\n  component :(<SettingsRoute />),\r\n  key :'Settings',\r\n  label :'Settings',\r\n  path : '/react-app-container/Settings'\r\n},\r\n{\r\n  component :(<SendMailRoute />),\r\n  key :'SendMail',\r\n  label :'Send Mail Page',\r\n  path : '/react-app-container/SendMail'\r\n}]\r\n\r\n\r\n\r\nconst ReactAppContainerDemo = (props) => {\r\n  const aceEditorRef = useRef(null);\r\n  const [dynamicStyleHeader, setDynamicStyleHeader] = useState({});\r\n  const [isEnabledRoutes, setIsEnabledRoutes] = useState(false);\r\n\r\n  const setHeaderBackgroundInterval = () => {\r\n    setInterval(() => {\r\n      var randomColorText = Math.floor(Math.random() * 16777215).toString(16);\r\n      var randomColorBackground = Math.floor(Math.random() * 16777215).toString(\r\n        16\r\n      );\r\n\r\n      setDynamicStyleHeader({\r\n        color: \"#\" + randomColorText,\r\n        backgroundColor: \"#\" + randomColorBackground,\r\n      });\r\n    }, 5000);\r\n  };\r\n\r\n  useEffect(() => {\r\n    setHeaderBackgroundInterval();\r\n    if (aceEditorRef && aceEditorRef.current)\r\n      aceEditorRef.current.editor.session.foldAll();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (aceEditorRef && aceEditorRef.current)\r\n        aceEditorRef.current.editor.session.foldAll();\r\n  }, [isEnabledRoutes])\r\n\r\n  return (\r\n    <div className={styles.container}>\r\n      <div style={dynamicStyleHeader} className={styles.headerContainer}>\r\n        <div className={styles.headerText}>\r\n          <p>React App Container</p>\r\n        </div>\r\n      </div>\r\n      <div className={styles.jsonContainer}>\r\n        <div style={{ marginBottom: \"10px\" }} className={styles.subHeaderText}>\r\n          Code\r\n        </div>\r\n        <div className={styles.jsonEditorContainer}>\r\n          <AceEditor\r\n            ref={aceEditorRef}\r\n            placeholder=\"Placeholder Text\"\r\n            mode=\"javascript\"\r\n            readOnly={true}\r\n            value={isEnabledRoutes ? jsonEditorCodeEnabledRoute : jsonEditorCodeDisabledRoute}\r\n            style={{ width: \"100%\", height: \"100%\" }}\r\n            theme=\"monokai\"\r\n            editorProps={{ $blockScrolling: true }}\r\n          />\r\n        </div>\r\n      </div>\r\n      <div className={styles.optionsContainer}>\r\n        <div style={{ marginBottom: \"10px\" }} className={styles.subHeaderText}>\r\n          Configurations\r\n        </div>\r\n        <div style={{overflowY :'scroll', height :'100%'}}>\r\n                              \r\n          <label style={{ marginRight: \"10px\" }} htmlFor=\"isEnableRoutesChck\">\r\n            Enable/Disable Routes\r\n          </label>\r\n          <input\r\n            id=\"isEnableRoutesChck\"\r\n            type=\"checkBox\"\r\n            onChange={(event) => {              \r\n              setIsEnabledRoutes(event.target.checked);\r\n            }}\r\n          />\r\n        </div>\r\n        <ReactMarkdown source={MarkDownForDemo} />\r\n      </div>\r\n      <div className={styles.mainContainer}>\r\n        <AppContainer\r\n          designConfig={DesignConfig}\r\n          routes={isEnabledRoutes && Routes}\r\n        >\r\n          <NoRouterVersion />\r\n        </AppContainer>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\nexport default ReactAppContainerDemo;\r\n","\r\nexport const MarkDownForDemo = `\r\n## Available Props\r\n\r\n| Prop                      | Default      | Type     | Description                                                                                                                                                                                                                                                                         |\r\n| ------------------------- | ------------ | -------- | ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- |\r\n| designConfig| {} | [Design Config](#design-config)| Design Configurations for Container                                                                                                                                                                                                                                                |\r\n| routes               | []         | Array<[ContainerRoute](#container-route)>| Routes Configuration in Container for React Router           \r\n| children|          | Object| Content of the container when routes are empty or null\r\n\r\n\r\n{: id=\"foo\"}\r\n## Design Config \r\n\r\n\r\n| Prop                      | Default      | Type     | Description                                                                                                                                                                                                                                                                         |\r\n| ------------------------- | ------------ | -------- | ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- |\r\n|\r\n| headerMenu| []           | Array<[MenuItem](#menu-item)>   | List of menu shown in header|\r\n| sideBarMenu| []           | Array<[MenuItem](#menu-item)> | List of menu shown in sidebar                                                                                                                                                                                                |\r\n| sideBarHeaderContent |            | Object   | Content for left top of container ( Logo vs)                                                                                                                                                                                            |\r\n| sideBarFooterContent |            | Object    | Content for left bottom of container                                                                                                                                                                                                                                                         |\r\n| headerLeftContent |     | Object| Content for left side of header|\r\n| headerRightContent |   | Object| Content for right side of header|         \r\n\r\n\r\n## Menu Item\r\n| Prop                      | Default      | Type     | Description                                                                                                                                                                                                                                                                         |\r\n| ------------------------- | ------------ | -------- | ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- |\r\n|\r\n| label| | String | Label for menu item                                                                                                                                                                                                                                                          |\r\n| routeKey|   | String | Key for connect the menu with the router. When click the menu item, if this key is not empty, the container link to route which has the routeKey in the [Routes](#container-route) config .                                                                                                                                                                                                                 |\r\n| iconName|   | String  | Name of one the predefined icons (, 'api', 'apps' , 'code', 'dashboard', 'expand_less', 'expand_more', 'home', 'info', 'language', 'list', 'mail', 'mediation', 'message', 'perm_idenity', 'post_add', 'radio_button_checked', 'room', 'settings').                                                                                                                                                                                                                                                                |\r\n| iconComp|   | Object  | Custom icon component for menu item|\r\n| customComp|   | Object  | Custom whole menu item component |\r\n| onClick|   | function  | Event when click menu item|\r\n| subMenuItemList|   | Array<[MenuItem](#menu-item)> | Sub menu list of menu item|\r\n\r\n                         \r\n\r\n## Container Route\r\n| Prop                      | Default      | Type     | Description                                                                                                                                                                                                                                                                         |\r\n| ------------------------- | ------------ | -------- | ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- |\r\n|\r\n| path | | String | Route path of your page (Example : '/home' , '/' , '/settings')                                                                                                                                                                                                                                                           |\r\n| key|   | String | Key for connect the menu with the router. This key will be use in the [MenuItem](#menu-item) for routing.                                                                                                                                                                                                                                                                         |\r\n| label |   | String  | Label for show on left side of header                                                                                                                                                                                                                                                                |\r\n| component|   | Object  | Your page or content which will show when the route active.|\r\n                         \r\n                                                                                                  \r\n`;                        \r\n                               ","import React from \"react\";\nimport { Switch,BrowserRouter as Router,Redirect,Route } from \"react-router-dom\";\nimport ReactAppContainerDemo from \"./pages/reactAppContainerDemo\";\nimport './css/normalize.css';\n\nfunction App() {\n  return (\n    <Router>\n        {/* A <Switch> looks through its children <Route>s and\n                renders the first one that matches the current URL. */}\n        <Switch>\n            <Route  path={process.env.PUBLIC_URL +\"/react-app-container\"}>\n                <ReactAppContainerDemo />\n            </Route>\n            <Redirect from='*' to={process.env.PUBLIC_URL +'/react-app-container'} />\n        </Switch>      \n    </Router>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"reactAppContainerDemo_container__2-ipQ\",\"jsonContainer\":\"reactAppContainerDemo_jsonContainer__3DXqK\",\"optionsContainer\":\"reactAppContainerDemo_optionsContainer__12pv9\",\"mainContainer\":\"reactAppContainerDemo_mainContainer__wmmF1\",\"headerContainer\":\"reactAppContainerDemo_headerContainer__1WHmK\",\"headerText\":\"reactAppContainerDemo_headerText__obQfS\",\"subHeaderText\":\"reactAppContainerDemo_subHeaderText__2vqdb\",\"subHeaderContainer\":\"reactAppContainerDemo_subHeaderContainer__1EkI1\",\"jsonEditorContainer\":\"reactAppContainerDemo_jsonEditorContainer__15_gN\"};"],"sourceRoot":""}